<?php

/**
 * @file
 * Functions to support theming in the ICDE theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function icde_theme_preprocess_html(&$variables)
{
    // Add class for authenticated users viewing restricted content
    if (\Drupal::currentUser()->isAuthenticated()) {
        $variables['attributes']['class'][] = 'user-authenticated';
    }
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function icde_theme_preprocess_page(&$variables)
{
    // Add library for restricted content if user has permission
    if (\Drupal::currentUser()->hasPermission('access restricted content')) {
        $variables['#attached']['library'][] = 'icde_theme/restricted';
    }
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function icde_theme_preprocess_node(&$variables)
{
    // Add article enhancement library for article content type
    if ($variables['node']->getType() == 'article') {
        $variables['#attached']['library'][] = 'icde_theme/article';
    }
}

function icde_theme_preprocess_menu(&$variables)
{
    if ($variables['menu_name'] === 'main') {
        // Get the logo path from the theme settings.
        $config = \Drupal::config('icde_theme.settings');
        $logo_path = $config->get('logo.path'); // Check if this key exists and is correct

        // Debugging: Check if the logo_path is valid
        \Drupal::logger('icde_theme')->notice('Logo path: @path', ['@path' => $logo_path]);

        if (!empty($logo_path)) {
            // If the path is relative, resolve it to the public file system
            if (strpos($logo_path, 'public://') === false) {
                $logo_path = 'public://' . ltrim($logo_path, '/');
            }

            // Convert the stream wrapper path to a full URL
            $logo_url = \Drupal::service('file_url_generator')->generateAbsoluteString($logo_path);

            // Debugging: Check if the logo URL is valid
            \Drupal::logger('icde_theme')->notice('Logo URL: @url', ['@url' => $logo_url]);

            if ($logo_url) {
                $variables['logo_url'] = $logo_url;
            } else {
                \Drupal::logger('icde_theme')->warning('Unable to generate logo URL for path: @path', ['@path' => $logo_path]);
                $variables['logo_url'] = null;
            }
        } else {
            \Drupal::logger('icde_theme')->warning('Logo path is empty or not set in theme settings.');
            $variables['logo_url'] = null;
        }

        // Adding site name and slogan
        $site_name = \Drupal::config('system.site')->get('name');
        $slogan = \Drupal::config('system.site')->get('slogan');

        if ($site_name) {
            $variables['site_name'] = $site_name;
        }
        if ($slogan) {
            $variables['slogan'] = $slogan;
        }
    }
}
/**
 * Implements hook_preprocess_HOOK() for region templates.
 */
function icde_theme_preprocess_region(&$variables)
{
    if ($variables['region'] === 'header') {


        // Add branding details to the header (e.g., logo, site name, slogan).
        $logo_url = \Drupal::config('system.site')->get('logo.url');
        $site_name = \Drupal::config('system.site')->get('name');
        $slogan = \Drupal::config('system.site')->get('slogan');

        if ($logo_url) {
            $variables['logo_url'] = $logo_url;
        }
        if ($site_name) {
            $variables['site_name'] = $site_name;
        }
        if ($slogan) {
            $variables['slogal'] = $slogan;
        }

    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function icde_theme_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $suggestions[] = 'page__' . $node->bundle();
    }
}
